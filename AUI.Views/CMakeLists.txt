cmake_minimum_required(VERSION 3.10)

set(AUI_EMBEDDED_FREETYPE OFF CACHE BOOL "Use embedded Freetype2")
set(AUI_EMBEDDED_GLEW OFF CACHE BOOL "Use embedded GLEW")

if (OPENGL_FOUND)

	if (NOT AUI_EMBEDDED_FREETYPE)
		find_package(Freetype)
	endif()

	if (NOT FREETYPE_FOUND)
		if (NOT TARGET freetype)
			message(STATUS "Using embedded Freetype")
			add_subdirectory(3rdparty/freetype)
			set_property(TARGET freetype PROPERTY POSITION_INDEPENDENT_CODE ON)
		endif()
	endif()


	if(NOT ANDROID)
		if (NOT WIN32)
			FIND_PACKAGE(PkgConfig REQUIRED)
			PKG_CHECK_MODULES(GTK3 gtk+-3.0)

			if (NOT GTK3_FOUND)
				message(WARNING "Could not find GTK3; Disabling AUI.Views. Hint: install package libgtk-3-dev")
				return()
			endif()
		endif ()
	endif()

	AUI_Module(AUI.Views)

	AUI_Compile_Assets(AUI.Views)


	if (GLEW_FOUND)
		target_include_directories(AUI.Views PUBLIC ${GLEW_INCLUDE_DIRS})
	else()
		message(STATUS "Using embedded GLEW")
		set(BUILD_UTILS OFF)

		if (NOT TARGET glew_s)
			add_subdirectory(3rdparty/glew/build/cmake)
		endif()
		set_property(TARGET glew_s PROPERTY POSITION_INDEPENDENT_CODE ON)
	endif()


	if(NOT ANDROID)
		if (NOT WIN32)
			include_directories (${GTK3_INCLUDE_DIRS})
			link_directories (${GTK3_LIBRARY_DIRS})
			target_link_libraries(AUI.Views PRIVATE gtk-3)
		endif ()
	endif()

	target_compile_definitions(AUI.Views PRIVATE UNICODE=1)

	target_link_libraries(AUI.Views PUBLIC AUI.Core)

	if(ANDROID)
		target_link_libraries(AUI.Views PUBLIC EGL GLESv2 GLESv3)
		target_link_libraries(AUI.Views PUBLIC freetype)
	else()
		target_link_libraries(AUI.Views PUBLIC OpenGL::GL)

		if (FREETYPE_FOUND)
			target_link_libraries(AUI.Views PRIVATE Freetype::Freetype)
		else()
			target_link_libraries(AUI.Views PRIVATE freetype)
		endif()
		if(WIN32)
			if (GLEW_FOUND)
				target_link_libraries(AUI.Views PUBLIC GLEW::glew_s)
			endif()
			target_link_libraries(AUI.Views PRIVATE dwmapi)
			target_link_libraries(AUI.Views PRIVATE winmm)
			if(MINGW)
				find_package(ZLIB REQUIRED)
				target_link_libraries(AUI.Views PRIVATE ZLIB::ZLIB)
			endif()
		else()
			if (GLEW_FOUND)
				target_link_libraries(AUI.Views PUBLIC GLEW::glew)
			endif()
		endif()
		if (NOT GLEW_FOUND)
			target_link_libraries(AUI.Views PRIVATE glew_s)
			target_include_directories(AUI.Views PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/glew/include>)
		endif()
	endif()
else()
	message("OpenGL library was not found. Disabling AUI.Views")
endif()
